/*--------------------------------*- C++ -*----------------------------------*\
| =========                 |                                                 |
| \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox           |
|  \\    /   O peration     | Version:  4.x                                   |
|   \\  /    A nd           | Web:      www.OpenFOAM.org                      |
|    \\/     M anipulation  |                                                 |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version     2.0;
    format      ascii;
    class       dictionary;
    location    "system";
    object      fvSchemes;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

ddtSchemes
{
    default         steadyState;
}

gradSchemes
{
    default         cellMDLimited Gauss linear 0.5; // 1.0;
}

divSchemes
{
    default         none;
    div(U)      Gauss linearUpwind default;//Gauss cubic cellLimited leastSquares 1.0; //corrected;
    div(phi,U)     bounded Gauss linearUpwind grad(U); // bounded Gauss cubic cellLimited leastSquares 1.0;
    div(Nij)      Gauss linearUpwind default; // Gauss cubic cellLimited leastSquares 1.0; //corrected;
    div(dev(Nij))      Gauss linearUpwind default; // Gauss cubic cellLimited leastSquares 1.0; //corrected;
    div(tauij_NL)   Gauss cubic cellLimited leastSquares 1.0;
    div(tauij)      Gauss cubic cellLimited leastSquares 1.0; //corrected;
    div(phi,k)      bounded Gauss linearUpwind default; // bounded Gauss cubic cellLimited leastSquares 1.0; //corrected;
    div(phi,omega)      bounded Gauss linearUpwind default; // bounded Gauss cubic cellLimited leastSquares 1.0; //corrected;
    div(R)     Gauss linearUpwind default; // Gauss cubic cellLimited leastSquares 1.0; //corrected;
    div(phi,R)      bounded Gauss linearUpwind default; //Gauss cubic cellLimited leastSquares 1.0; //corrected;
    div(phi,nuTilda) Gauss linearUpwind default; // Gauss cubic cellLimited leastSquares 1.0; //corrected;
    div((nuEff*dev(grad(U).T()))) Gauss linear; // Gauss cubic cellLimited leastSquares 1.0; //corrected;
    div((nuUEff*dev2(T(grad(U))))) Gauss linear;
    div((nuEff*dev2(T(grad(U))))) Gauss linear; // cubic cellLimited leastSquares 1.0;
}

laplacianSchemes
{
    default         Gauss linear limited 1.0; // corrected;
}

interpolationSchemes
{
    default         linear; // cubic;
}

snGradSchemes
{
    default         limited 1.0;// fourth;
}

wallDist
{
    method meshWave;
}


// ************************************************************************* //
